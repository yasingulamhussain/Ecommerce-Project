{"ast":null,"code":"import { CANCEL } from '@redux-saga/symbols';\nvar MAX_SIGNED_INT = 2147483647;\n\nfunction delayP(ms, val) {\n  if (val === void 0) {\n    val = true;\n  } // https://developer.mozilla.org/en-US/docs/Web/API/setTimeout#maximum_delay_value\n\n\n  if (process.env.NODE_ENV !== 'production' && ms > MAX_SIGNED_INT) {\n    throw new Error('delay only supports a maximum value of ' + MAX_SIGNED_INT + 'ms');\n  }\n\n  var timeoutId;\n  var promise = new Promise(function (resolve) {\n    timeoutId = setTimeout(resolve, Math.min(MAX_SIGNED_INT, ms), val);\n  });\n\n  promise[CANCEL] = function () {\n    clearTimeout(timeoutId);\n  };\n\n  return promise;\n}\n\nexport default delayP;","map":{"version":3,"sources":["/Users/Yasin.Gulamhussain.Admin/Ecommerce-Project/node_modules/@redux-saga/delay-p/dist/redux-saga-delay-p.esm.js"],"names":["CANCEL","MAX_SIGNED_INT","delayP","ms","val","process","env","NODE_ENV","Error","timeoutId","promise","Promise","resolve","setTimeout","Math","min","clearTimeout"],"mappings":"AAAA,SAASA,MAAT,QAAuB,qBAAvB;AAEA,IAAIC,cAAc,GAAG,UAArB;;AACA,SAASC,MAAT,CAAgBC,EAAhB,EAAoBC,GAApB,EAAyB;AACvB,MAAIA,GAAG,KAAK,KAAK,CAAjB,EAAoB;AAClBA,IAAAA,GAAG,GAAG,IAAN;AACD,GAHsB,CAKvB;;;AACA,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCJ,EAAE,GAAGF,cAAlD,EAAkE;AAChE,UAAM,IAAIO,KAAJ,CAAU,4CAA4CP,cAA5C,GAA6D,IAAvE,CAAN;AACD;;AAED,MAAIQ,SAAJ;AACA,MAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AAC3CH,IAAAA,SAAS,GAAGI,UAAU,CAACD,OAAD,EAAUE,IAAI,CAACC,GAAL,CAASd,cAAT,EAAyBE,EAAzB,CAAV,EAAwCC,GAAxC,CAAtB;AACD,GAFa,CAAd;;AAIAM,EAAAA,OAAO,CAACV,MAAD,CAAP,GAAkB,YAAY;AAC5BgB,IAAAA,YAAY,CAACP,SAAD,CAAZ;AACD,GAFD;;AAIA,SAAOC,OAAP;AACD;;AAED,eAAeR,MAAf","sourcesContent":["import { CANCEL } from '@redux-saga/symbols';\n\nvar MAX_SIGNED_INT = 2147483647;\nfunction delayP(ms, val) {\n  if (val === void 0) {\n    val = true;\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/setTimeout#maximum_delay_value\n  if (process.env.NODE_ENV !== 'production' && ms > MAX_SIGNED_INT) {\n    throw new Error('delay only supports a maximum value of ' + MAX_SIGNED_INT + 'ms');\n  }\n\n  var timeoutId;\n  var promise = new Promise(function (resolve) {\n    timeoutId = setTimeout(resolve, Math.min(MAX_SIGNED_INT, ms), val);\n  });\n\n  promise[CANCEL] = function () {\n    clearTimeout(timeoutId);\n  };\n\n  return promise;\n}\n\nexport default delayP;\n"]},"metadata":{},"sourceType":"module"}