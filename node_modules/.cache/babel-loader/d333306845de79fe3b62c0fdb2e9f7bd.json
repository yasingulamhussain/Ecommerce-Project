{"ast":null,"code":"// import { compose, createStore, applyMiddleware } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit'; // import { persistStore, persistReducer } from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\n\nimport logger from 'redux-logger';\nimport { rootReducer } from './root-reducer';\nconst middleWares = [process.env.NODE_ENV === 'development' && logger].filter(Boolean); // const composeEnhancer =\n//   (process.env.NODE_ENV !== 'production' &&\n//     window &&\n//     window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n//   compose;\n// const persistConfig = {\n//   key: 'root',\n//   storage,\n//   blacklist: ['user'],\n// };\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n// const composedEnhancers = composeEnhancer(applyMiddleware(...middleWares));\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(middleWares)\n}); // export const persistor = persistStore(store);","map":{"version":3,"sources":["/Users/Yasin.Gulamhussain.Admin/Ecommerce-Project/src/store/store.js"],"names":["configureStore","logger","rootReducer","middleWares","process","env","NODE_ENV","filter","Boolean","store","reducer","middleware","getDefaultMiddleware","concat"],"mappings":"AAAA;AACA,SAASA,cAAT,QAA+B,kBAA/B,C,CACA;AACA;;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,MAAMC,WAAW,GAAG,CAACC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CL,MAA3C,EAAmDM,MAAnD,CAClBC,OADkB,CAApB,C,CAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAEA,OAAO,MAAMC,KAAK,GAAGT,cAAc,CAAC;AAClCU,EAAAA,OAAO,EAAER,WADyB;AAElCS,EAAAA,UAAU,EAAGC,oBAAD,IACVA,oBAAoB,GAAGC,MAAvB,CAA8BV,WAA9B;AAHgC,CAAD,CAA5B,C,CAMP","sourcesContent":["// import { compose, createStore, applyMiddleware } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\n// import { persistStore, persistReducer } from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\n\nimport { rootReducer } from './root-reducer';\n\nconst middleWares = [process.env.NODE_ENV === 'development' && logger].filter(\n  Boolean\n);\n\n// const composeEnhancer =\n//   (process.env.NODE_ENV !== 'production' &&\n//     window &&\n//     window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n//   compose;\n\n// const persistConfig = {\n//   key: 'root',\n//   storage,\n//   blacklist: ['user'],\n// };\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n\n// const composedEnhancers = composeEnhancer(applyMiddleware(...middleWares));\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(middleWares),\n});\n\n// export const persistor = persistStore(store);\n"]},"metadata":{},"sourceType":"module"}