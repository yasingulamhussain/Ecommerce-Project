{"ast":null,"code":"var ORIGIN = 'https://js.stripe.com';\nvar STRIPE_JS_URL = \"\".concat(ORIGIN, \"/v3\");\nvar V3_URL_REGEX = /^https:\\/\\/js\\.stripe\\.com\\/v3\\/?(\\?.*)?$/;\nvar STRIPE_JS_URL_REGEX = /^https:\\/\\/js\\.stripe\\.com\\/(v3|[a-z]+)\\/stripe\\.js(\\?.*)?$/;\nvar EXISTING_SCRIPT_MESSAGE = 'loadStripe.setLoadParameters was called but an existing Stripe.js script already exists in the document; existing script parameters will be used';\n\nvar isStripeJSURL = function isStripeJSURL(url) {\n  return V3_URL_REGEX.test(url) || STRIPE_JS_URL_REGEX.test(url);\n};\n\nvar findScript = function findScript() {\n  var scripts = document.querySelectorAll(\"script[src^=\\\"\".concat(ORIGIN, \"\\\"]\"));\n\n  for (var i = 0; i < scripts.length; i++) {\n    var script = scripts[i];\n\n    if (!isStripeJSURL(script.src)) {\n      continue;\n    }\n\n    return script;\n  }\n\n  return null;\n};\n\nvar injectScript = function injectScript(params) {\n  var queryString = params && !params.advancedFraudSignals ? '?advancedFraudSignals=false' : '';\n  var script = document.createElement('script');\n  script.src = \"\".concat(STRIPE_JS_URL).concat(queryString);\n  var headOrBody = document.head || document.body;\n\n  if (!headOrBody) {\n    throw new Error('Expected document.body not to be null. Stripe.js requires a <body> element.');\n  }\n\n  headOrBody.appendChild(script);\n  return script;\n};\n\nvar registerWrapper = function registerWrapper(stripe, startTime) {\n  if (!stripe || !stripe._registerWrapper) {\n    return;\n  }\n\n  stripe._registerWrapper({\n    name: 'stripe-js',\n    version: \"5.8.0\",\n    startTime: startTime\n  });\n};\n\nvar stripePromise$1 = null;\nvar onErrorListener = null;\nvar onLoadListener = null;\n\nvar onError = function onError(reject) {\n  return function (cause) {\n    reject(new Error('Failed to load Stripe.js', {\n      cause: cause\n    }));\n  };\n};\n\nvar onLoad = function onLoad(resolve, reject) {\n  return function () {\n    if (window.Stripe) {\n      resolve(window.Stripe);\n    } else {\n      reject(new Error('Stripe.js not available'));\n    }\n  };\n};\n\nvar loadScript = function loadScript(params) {\n  // Ensure that we only attempt to load Stripe.js at most once\n  if (stripePromise$1 !== null) {\n    return stripePromise$1;\n  }\n\n  stripePromise$1 = new Promise(function (resolve, reject) {\n    if (typeof window === 'undefined' || typeof document === 'undefined') {\n      // Resolve to null when imported server side. This makes the module\n      // safe to import in an isomorphic code base.\n      resolve(null);\n      return;\n    }\n\n    if (window.Stripe && params) {\n      console.warn(EXISTING_SCRIPT_MESSAGE);\n    }\n\n    if (window.Stripe) {\n      resolve(window.Stripe);\n      return;\n    }\n\n    try {\n      var script = findScript();\n\n      if (script && params) {\n        console.warn(EXISTING_SCRIPT_MESSAGE);\n      } else if (!script) {\n        script = injectScript(params);\n      } else if (script && onLoadListener !== null && onErrorListener !== null) {\n        var _script$parentNode; // remove event listeners\n\n\n        script.removeEventListener('load', onLoadListener);\n        script.removeEventListener('error', onErrorListener); // if script exists, but we are reloading due to an error,\n        // reload script to trigger 'load' event\n\n        (_script$parentNode = script.parentNode) === null || _script$parentNode === void 0 ? void 0 : _script$parentNode.removeChild(script);\n        script = injectScript(params);\n      }\n\n      onLoadListener = onLoad(resolve, reject);\n      onErrorListener = onError(reject);\n      script.addEventListener('load', onLoadListener);\n      script.addEventListener('error', onErrorListener);\n    } catch (error) {\n      reject(error);\n      return;\n    }\n  }); // Resets stripePromise on error\n\n  return stripePromise$1[\"catch\"](function (error) {\n    stripePromise$1 = null;\n    return Promise.reject(error);\n  });\n};\n\nvar initStripe = function initStripe(maybeStripe, args, startTime) {\n  if (maybeStripe === null) {\n    return null;\n  }\n\n  var stripe = maybeStripe.apply(undefined, args);\n  registerWrapper(stripe, startTime);\n  return stripe;\n}; // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\n\nvar stripePromise;\nvar loadCalled = false;\n\nvar getStripePromise = function getStripePromise() {\n  if (stripePromise) {\n    return stripePromise;\n  }\n\n  stripePromise = loadScript(null)[\"catch\"](function (error) {\n    // clear cache on error\n    stripePromise = null;\n    return Promise.reject(error);\n  });\n  return stripePromise;\n}; // Execute our own script injection after a tick to give users time to do their\n// own script injection.\n\n\nPromise.resolve().then(function () {\n  return getStripePromise();\n})[\"catch\"](function (error) {\n  if (!loadCalled) {\n    console.warn(error);\n  }\n});\n\nvar loadStripe = function loadStripe() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  loadCalled = true;\n  var startTime = Date.now(); // if previous attempts are unsuccessful, will re-load script\n\n  return getStripePromise().then(function (maybeStripe) {\n    return initStripe(maybeStripe, args, startTime);\n  });\n};\n\nexport { loadStripe };","map":{"version":3,"sources":["/Users/Yasin.Gulamhussain.Admin/Ecommerce-Project/node_modules/@stripe/stripe-js/dist/index.mjs"],"names":["ORIGIN","STRIPE_JS_URL","concat","V3_URL_REGEX","STRIPE_JS_URL_REGEX","EXISTING_SCRIPT_MESSAGE","isStripeJSURL","url","test","findScript","scripts","document","querySelectorAll","i","length","script","src","injectScript","params","queryString","advancedFraudSignals","createElement","headOrBody","head","body","Error","appendChild","registerWrapper","stripe","startTime","_registerWrapper","name","version","stripePromise$1","onErrorListener","onLoadListener","onError","reject","cause","onLoad","resolve","window","Stripe","loadScript","Promise","console","warn","_script$parentNode","removeEventListener","parentNode","removeChild","addEventListener","error","initStripe","maybeStripe","args","apply","undefined","stripePromise","loadCalled","getStripePromise","then","loadStripe","_len","arguments","Array","_key","Date","now"],"mappings":"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","sourcesContent":["var ORIGIN = 'https://js.stripe.com';\nvar STRIPE_JS_URL = \"\".concat(ORIGIN, \"/v3\");\nvar V3_URL_REGEX = /^https:\\/\\/js\\.stripe\\.com\\/v3\\/?(\\?.*)?$/;\nvar STRIPE_JS_URL_REGEX = /^https:\\/\\/js\\.stripe\\.com\\/(v3|[a-z]+)\\/stripe\\.js(\\?.*)?$/;\nvar EXISTING_SCRIPT_MESSAGE = 'loadStripe.setLoadParameters was called but an existing Stripe.js script already exists in the document; existing script parameters will be used';\n\nvar isStripeJSURL = function isStripeJSURL(url) {\n  return V3_URL_REGEX.test(url) || STRIPE_JS_URL_REGEX.test(url);\n};\n\nvar findScript = function findScript() {\n  var scripts = document.querySelectorAll(\"script[src^=\\\"\".concat(ORIGIN, \"\\\"]\"));\n\n  for (var i = 0; i < scripts.length; i++) {\n    var script = scripts[i];\n\n    if (!isStripeJSURL(script.src)) {\n      continue;\n    }\n\n    return script;\n  }\n\n  return null;\n};\n\nvar injectScript = function injectScript(params) {\n  var queryString = params && !params.advancedFraudSignals ? '?advancedFraudSignals=false' : '';\n  var script = document.createElement('script');\n  script.src = \"\".concat(STRIPE_JS_URL).concat(queryString);\n  var headOrBody = document.head || document.body;\n\n  if (!headOrBody) {\n    throw new Error('Expected document.body not to be null. Stripe.js requires a <body> element.');\n  }\n\n  headOrBody.appendChild(script);\n  return script;\n};\n\nvar registerWrapper = function registerWrapper(stripe, startTime) {\n  if (!stripe || !stripe._registerWrapper) {\n    return;\n  }\n\n  stripe._registerWrapper({\n    name: 'stripe-js',\n    version: \"5.8.0\",\n    startTime: startTime\n  });\n};\n\nvar stripePromise$1 = null;\nvar onErrorListener = null;\nvar onLoadListener = null;\n\nvar onError = function onError(reject) {\n  return function (cause) {\n    reject(new Error('Failed to load Stripe.js', {\n      cause: cause\n    }));\n  };\n};\n\nvar onLoad = function onLoad(resolve, reject) {\n  return function () {\n    if (window.Stripe) {\n      resolve(window.Stripe);\n    } else {\n      reject(new Error('Stripe.js not available'));\n    }\n  };\n};\n\nvar loadScript = function loadScript(params) {\n  // Ensure that we only attempt to load Stripe.js at most once\n  if (stripePromise$1 !== null) {\n    return stripePromise$1;\n  }\n\n  stripePromise$1 = new Promise(function (resolve, reject) {\n    if (typeof window === 'undefined' || typeof document === 'undefined') {\n      // Resolve to null when imported server side. This makes the module\n      // safe to import in an isomorphic code base.\n      resolve(null);\n      return;\n    }\n\n    if (window.Stripe && params) {\n      console.warn(EXISTING_SCRIPT_MESSAGE);\n    }\n\n    if (window.Stripe) {\n      resolve(window.Stripe);\n      return;\n    }\n\n    try {\n      var script = findScript();\n\n      if (script && params) {\n        console.warn(EXISTING_SCRIPT_MESSAGE);\n      } else if (!script) {\n        script = injectScript(params);\n      } else if (script && onLoadListener !== null && onErrorListener !== null) {\n        var _script$parentNode;\n\n        // remove event listeners\n        script.removeEventListener('load', onLoadListener);\n        script.removeEventListener('error', onErrorListener); // if script exists, but we are reloading due to an error,\n        // reload script to trigger 'load' event\n\n        (_script$parentNode = script.parentNode) === null || _script$parentNode === void 0 ? void 0 : _script$parentNode.removeChild(script);\n        script = injectScript(params);\n      }\n\n      onLoadListener = onLoad(resolve, reject);\n      onErrorListener = onError(reject);\n      script.addEventListener('load', onLoadListener);\n      script.addEventListener('error', onErrorListener);\n    } catch (error) {\n      reject(error);\n      return;\n    }\n  }); // Resets stripePromise on error\n\n  return stripePromise$1[\"catch\"](function (error) {\n    stripePromise$1 = null;\n    return Promise.reject(error);\n  });\n};\nvar initStripe = function initStripe(maybeStripe, args, startTime) {\n  if (maybeStripe === null) {\n    return null;\n  }\n\n  var stripe = maybeStripe.apply(undefined, args);\n  registerWrapper(stripe, startTime);\n  return stripe;\n}; // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\nvar stripePromise;\nvar loadCalled = false;\n\nvar getStripePromise = function getStripePromise() {\n  if (stripePromise) {\n    return stripePromise;\n  }\n\n  stripePromise = loadScript(null)[\"catch\"](function (error) {\n    // clear cache on error\n    stripePromise = null;\n    return Promise.reject(error);\n  });\n  return stripePromise;\n}; // Execute our own script injection after a tick to give users time to do their\n// own script injection.\n\n\nPromise.resolve().then(function () {\n  return getStripePromise();\n})[\"catch\"](function (error) {\n  if (!loadCalled) {\n    console.warn(error);\n  }\n});\nvar loadStripe = function loadStripe() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  loadCalled = true;\n  var startTime = Date.now(); // if previous attempts are unsuccessful, will re-load script\n\n  return getStripePromise().then(function (maybeStripe) {\n    return initStripe(maybeStripe, args, startTime);\n  });\n};\n\nexport { loadStripe };\n"]},"metadata":{},"sourceType":"module"}